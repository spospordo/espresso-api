// Enhanced configuration file organized by consuming modules
// This file contains all configuration settings for the espresso-api project
module.exports = {
  
  // =================================================================
  // EXPRESS SERVER CONFIGURATION (used by server.js)
  // =================================================================
  server: {
    port: 3000,                                                    // Port for Express server to listen on
    staticFilesDirectory: '/yourfolder/folder',                    // Directory to serve static files from
    textFilePath: '/home/<username or folder>/espresso-api/textValues.json'  // Path to JSON file storing dynamic text values
  },

  // =================================================================
  // HTML GENERATION CONFIGURATION (used by generateHTML.cjs)
  // =================================================================
  htmlGeneration: {
    originalHTMLPath: '/your-folder/index.html',                   // Path to the template HTML file to process
    serverURL: 'http://<server IP>:3000/get-text',                // URL to fetch dynamic text values from server.js
    imagePaths: {                                                  // Image URLs to replace in the HTML based on alt text
      smallcontainer: 'https://<githubUsername>.github.io/TRMNL/smallContainer.png',
      mediumcontainer: 'https://<githubUsername>.github.io/TRMNL/mediumContainer.png',
      largecontainer: 'https://<githubUsername>.github.io/TRMNL/largeContainer.png'
    }
  },

  // =================================================================
  // IMAGE CONVERSION CONFIGURATION (used by convertToJpeg.cjs)
  // =================================================================
  conversion: {
    localFilePath: 'http://localhost/espresso/output.html'         // URL of webpage to capture as screenshot (leave blank to skip conversion)
  },

  // =================================================================
  // FTP UPLOAD CONFIGURATION (used by ftpFile.js)
  // =================================================================
  ftp: {
    host: 'ftpupload url',                                         // FTP server hostname (leave blank to skip FTP upload)
    user: 'UserID',                                                // FTP username
    password: 'Password',                                          // FTP password
    secure: false,                                                 // Use FTPS (FTP over SSL/TLS)
    pasv: true,                                                    // Use passive mode for FTP connections
    localFilePath: '/path/to/local/file',                         // Local file path to upload via FTP
    remoteOutputPath: '/your-folder/output.jpeg'                  // Remote FTP path where file will be uploaded
  },

  // =================================================================
  // GITHUB UPLOAD CONFIGURATION (used by uploadToGitHub.mjs)
  // =================================================================
  github: {
    username: 'username',                                          // GitHub username
    token: 'tokenText',                                            // GitHub personal access token
    repo: '<username>.github.io',                                 // GitHub repository name
    branch: 'main',                                                // Git branch to push to
    repoLocalPath: '/absolute/path/to/your/repo'                  // Local filesystem path to the git repository
  },

  // =================================================================
  // OUTPUT FILE PATHS (used by multiple modules)
  // =================================================================
  outputFiles: {
    html: '/home/pi/pages/example.github.io/output.html',         // Generated HTML file output path (generateHTML.cjs â†’ convertToJpeg.cjs)
    jpeg: '/home/pi/pages/example.github.io/output.jpeg',         // Screenshot JPEG output path (convertToJpeg.cjs)
    logs: '/home/pi/pages/example.github.io/logs.txt',            // Log file output path
    vidiots: '/home/pi/pages/example.github.io/vidiots.html'      // Vidiots scraping HTML output path (scrapeVidiots.cjs)
  },

  // =================================================================
  // VIDIOTS SCRAPING CONFIGURATION (used by scrapeVidiots.cjs)
  // =================================================================
  vidiots: {
    posterBaseUrl: "https://example.github.io/TRMNL/",           // Base URL for serving downloaded movie poster images
    posterDirectory: "/home/pi/pages/example.github.io",         // Local directory where poster images will be saved
    forceUpdate: false,                                          // Force update HTML file even if content hasn't changed (set to true to always push updates)
    maxAgeHours: 24                                              // Maximum age in hours before forcing an update regardless of content changes
  }

  // Note: Removed unused 'file.filesToUpload' configuration as no modules reference it
}
